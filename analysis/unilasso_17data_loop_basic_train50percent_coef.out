[1] "/scratch/users/aqwang/conda/envs/r_package/lib/R"
Setting up parallel processing with 32 cores
[[1]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[2]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[3]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[4]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[5]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[6]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[7]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[8]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[9]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[10]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[11]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[12]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[13]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[14]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[15]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[16]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[17]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[18]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[19]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[20]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[21]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[22]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[23]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[24]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[25]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[26]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[27]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[28]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[29]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[30]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[31]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

[[32]]
 [1] "uniLasso"  "glmnet"    "Matrix"    "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     


 ================================================================================ 
Extracting coefficients for dataset: airfoil ( 1 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 1503x5 , y = 1503 
Dataset completed in: 3.135692 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_airfoil.csv 
Coefficients stored - Shape: 700 8 

 ================================================================================ 
Extracting coefficients for dataset: ca_housing ( 2 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 20640x8 , y = 20640 
Dataset completed in: 1.496202 mins 
Saved per-dataset coefficients to: coef_csv/coefficients_ca_housing.csv 
Coefficients stored - Shape: 700 11 

 ================================================================================ 
Extracting coefficients for dataset: computer ( 3 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 8192x21 , y = 8192 
Dataset completed in: 7.727058 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_computer.csv 
Coefficients stored - Shape: 700 24 

 ================================================================================ 
Extracting coefficients for dataset: concrete ( 4 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 1030x8 , y = 1030 
Dataset completed in: 2.719132 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_concrete.csv 
Coefficients stored - Shape: 700 11 

 ================================================================================ 
Extracting coefficients for dataset: debutanizer ( 5 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 2394x7 , y = 2394 
Dataset completed in: 3.389519 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_debutanizer.csv 
Coefficients stored - Shape: 700 10 

 ================================================================================ 
Extracting coefficients for dataset: diamond ( 6 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 53940x23 , y = 53940 
Dataset completed in: 7.5139 mins 
Saved per-dataset coefficients to: coef_csv/coefficients_diamond.csv 
Coefficients stored - Shape: 700 26 

 ================================================================================ 
Extracting coefficients for dataset: elevator ( 7 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 16599x18 , y = 16599 
Dataset completed in: 16.27078 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_elevator.csv 
Coefficients stored - Shape: 700 21 

 ================================================================================ 
Extracting coefficients for dataset: energy_efficiency ( 8 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 768x10 , y = 768 
Dataset completed in: 2.771904 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_energy_efficiency.csv 
Coefficients stored - Shape: 700 13 

 ================================================================================ 
Extracting coefficients for dataset: insurance ( 9 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 1338x8 , y = 1338 
Dataset completed in: 2.955934 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_insurance.csv 
Coefficients stored - Shape: 700 11 

 ================================================================================ 
Extracting coefficients for dataset: kin8nm ( 10 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 8192x8 , y = 8192 
Dataset completed in: 6.808108 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_kin8nm.csv 
Coefficients stored - Shape: 700 11 

 ================================================================================ 
Extracting coefficients for dataset: miami_housing ( 11 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 13932x28 , y = 13932 
Dataset completed in: 16.40815 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_miami_housing.csv 
Coefficients stored - Shape: 700 31 

 ================================================================================ 
Extracting coefficients for dataset: naval_propulsion ( 12 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 11934x24 , y = 11934 
Dataset completed in: 11.03944 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_naval_propulsion.csv 
Coefficients stored - Shape: 700 27 

 ================================================================================ 
Extracting coefficients for dataset: parkinsons ( 13 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 5875x18 , y = 5875 
Dataset completed in: 6.763539 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_parkinsons.csv 
Coefficients stored - Shape: 700 21 

 ================================================================================ 
Extracting coefficients for dataset: powerplant ( 14 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 9568x4 , y = 9568 
Dataset completed in: 7.280667 secs 
Saved per-dataset coefficients to: coef_csv/coefficients_powerplant.csv 
Coefficients stored - Shape: 700 7 

 ================================================================================ 
Extracting coefficients for dataset: protein_structure ( 15 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 45730x9 , y = 45730 
Dataset completed in: 2.10542 mins 
Saved per-dataset coefficients to: coef_csv/coefficients_protein_structure.csv 
Coefficients stored - Shape: 700 12 

 ================================================================================ 
Extracting coefficients for dataset: qsar ( 16 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 5742x500 , y = 5742 
Dataset completed in: 8.229747 mins 
Saved per-dataset coefficients to: coef_csv/coefficients_qsar.csv 
Coefficients stored - Shape: 700 503 

 ================================================================================ 
Extracting coefficients for dataset: superconductor ( 17 / 17 )
Running 100 random train/test splits in parallel...
================================================================================ 
Data dimensions: X = 21263x79 , y = 21263 
Dataset completed in: 1.064375 hours 
Saved per-dataset coefficients to: coef_csv/coefficients_superconductor.csv 
Coefficients stored - Shape: 700 82 

 ================================================================================ 
Creating summary of coefficient data...
COEFFICIENT EXTRACTION COMPLETE!
Per-dataset CSVs in: /accounts/grad/aqwang/unilasso/analysis/coef_csv 
Dataset summary saved to: dataset_coefficient_summary.csv
RData saved to: /accounts/grad/aqwang/unilasso/analysis/unilasso_17datasets_coefficients_only.RData 

Dataset Summary:
             dataset n_features n_rows
1            airfoil          0    700
2         ca_housing          0    700
3           computer          0    700
4           concrete          0    700
5        debutanizer          0    700
6            diamond          0    700
7           elevator          0    700
8  energy_efficiency          0    700
9          insurance          0    700
10            kin8nm          0    700
11     miami_housing          0    700
12  naval_propulsion          0    700
13        parkinsons          0    700
14        powerplant          0    700
15 protein_structure          0    700
16              qsar          0    700
17    superconductor          0    700
Total datasets processed: 17 
Total time elapsed: 1.412347 hours 
Average time per dataset: 0.08307923 hours 

 ================================================================================ 
USAGE EXAMPLES:
# Load all coefficients:
load("unilasso_17datasets_coefficients_only.RData")

# Access coefficients for a specific dataset:
airfoil_coeffs <- all_datasets_coefficients[["airfoil"]]

# Get all UniLasso LOO=TRUE coefficients for airfoil:
unilasso_coeffs <- airfoil_coeffs[airfoil_coeffs$method == "unilasso_loo_true", ]

# Extract just the coefficient values (excluding metadata):
coeff_cols <- !names(unilasso_coeffs) %in% c("dataset", "method", "split_id")
coeff_matrix <- as.matrix(unilasso_coeffs[, coeff_cols])
# Dimensions: 100 splits x p features
================================================================================ 
